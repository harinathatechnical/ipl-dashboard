{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/Teampage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a8a5b28.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MatchDetailCard.scss'\r\n\r\nexport const MatchDetailCard = ({teamName,match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`\r\n  const isMatchWon = teamName === match.matchWinner; \r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n      <div>\r\n      <span className=\"vs\"> vs </span> \r\n      <h1>\r\n         <Link to={otherTeamRoute} > {otherTeam} </Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">{match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n        </div>\r\n        <div className=\"additional-details\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        \r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n\r\n        <h3>Man of the Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1},{match.umpire2}</p>\r\n\r\n        </div>\r\n     </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`\r\n  const isMatchWon = teamName === match.matchWinner; \r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n        <span className=\"vs\"> vs </span> \r\n      <h1>\r\n         <Link to={otherTeamRoute} > {otherTeam} </Link></h1>\r\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n     </div>\r\n  );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './TeamPage.scss'\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team, setTeam] = useState({matches:[]});\r\n  const { teamName } = useParams();\r\n  useEffect(\r\n        ()=>{\r\n         \r\n          const fetchTeam = async()=>{\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n            const data = await response.json();\r\n            //console.log(data);  \r\n            setTeam(data);\r\n          };\r\n          fetchTeam();\r\n          \r\n      },[teamName]\r\n  );\r\n\r\n  if(!team || !team.teamName){\r\n    return <h1>Team not Found</h1>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\"> \r\n            <h1 className=\"team-name\"> { team.teamName } </h1> \r\n        </div>\r\n        <div className=\"win-loss-section\">\r\n          Wins / Losses \r\n          <PieChart data={[\r\n            { title: 'Losses' , value:team.totalMatches - team.totalWins , color: '#a34d5d'},\r\n           { title: 'Wins' , value:team.totalWins , color: '#4da375'}\r\n           \r\n          ]}/>\r\n        </div>\r\n        <div className=\"match-details-section\">\r\n        <h3> Latest Matches </h3>\r\n        <MatchDetailCard  teamName={team.teamName} match={team.matches[0]}/>\r\n        </div>\r\n          {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)}\r\n          \r\n          <div className=\"more-link\">\r\n            <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More\r\n\r\n            </Link>\r\n            \r\n          </div>\r\n\r\n     </div>\r\n  );\r\n}\r\n","import { React } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName})=> {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for(let i= startYear ; i <= endYear ; i++){\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n       { years.map(year=> (\r\n       <li> \r\n          <Link key={year} to={`/teams/${teamName}/matches/${year}`}>  {year} </Link>\r\n        </li> \r\n        )\r\n       )\r\n       }\r\n        </ol>\r\n    );\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport'./MatchPage.scss';\r\nimport { YearSelector } from '../components/YearSelector';\r\nexport const MatchPage = () => {\r\n\r\n        const [matches, setMatches] = useState([]);\r\n        const { teamName, year } = useParams();\r\n        \r\n        useEffect(\r\n            ()=>{\r\n             \r\n              const fetchMatches = async()=>{\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                //console.log(data);  \r\n                setMatches(data);\r\n              };\r\n              fetchMatches();\r\n              \r\n          },[teamName,year]\r\n      );\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n\r\n       <div className=\"year-selector\">\r\n          <h3>Select Yest</h3>\r\n         <YearSelector teamName={teamName}/>\r\n       </div>\r\n        <div>\r\n        <h1 className=\"page-heading\"> {teamName} matches in {year} </h1>\r\n        {matches.slice(1).map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match}/>)}\r\n        </div>\r\n     </div>\r\n  );\r\n}\r\n","import { React } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport './TeamTile.scss'\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n  return (\r\n    <div className=\"TeamTile\">\r\n      <h1>\r\n          <Link to={`/teams/${teamName}`}>\r\n          {teamName}\r\n          </Link>\r\n          </h1>\r\n    </div>\r\n  );\r\n};\r\n","import { React, useEffect, useState } from 'react';\r\n\r\n\r\nimport './HomePage.scss'\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\nexport const HomePage = () => {\r\n\r\n  const [teams, setTeams] = useState([]);\r\n \r\n  useEffect(\r\n        ()=>{\r\n         \r\n          const fetchAllTeams = async()=>{\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n            const data = await response.json();\r\n            //console.log(data);  \r\n            setTeams(data);\r\n          };\r\n          fetchAllTeams();\r\n          \r\n      },[]\r\n  );\r\n\r\n \r\n  return (\r\n    <div className=\"HomePage\">\r\n        <div className=\"header-section\"> \r\n            <h1 className=\"app-name\"> IPL Dashboard </h1> \r\n        </div>\r\n\r\n        <div className='team-grid'>\r\n            { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />) }\r\n        </div>\r\n\r\n       </div>\r\n  );\r\n}\r\n","\nimport './App.scss';\nimport {HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/Teampage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage/>\n        </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage/>\n        </Route>\n\n        <Route path=\"/\">\n          <HomePage/>\n        </Route>\n      \n        \n      </Switch>\n      </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}